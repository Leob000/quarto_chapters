title("Unknown Number of Rejections")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(samples[,,3], 25, flim=c(1.75, 2.5), name="tau")
title("Unknown Number of Rejections")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
samples <- rstan:::extract(fit3)
par(mfrow=c(1, 2), mar = c(5, 5, 3, 1))
histogram_retro(data$x, samples$x_pred, -10, 15, 25)
samples <- rstan:::extract(fit3)
par(mfrow=c(1, 2), mar = c(5, 5, 3, 1))
histogram_retro(data$y, samples$y_pred, -10, 15, 25)
samples <- rstan:::extract(fit3, permute=FALSE)
util$plot_pushforward_hist(samples[,,3 + data$N_grid + data$N + 1], 25, name="N_reject")
samples <- rstan:::extract(fit3)
par(mfrow=c(1, 2), mar = c(5, 5, 3, 1))
histogram_retro(data$y, samples$y_pred, -10, 15, 25)
samples <- rstan:::extract(fit3, permute=FALSE)
util$plot_pushforward_hist(samples[,,3 + data$N + 1], 25, name="N_reject")
abline(v=data$N_reject, col="white", lty=1, lwd=3)
abline(v=data$N_reject, col="black", lty=1, lwd=2)
chi <- 2
gamma <- 0.75
delta <- 0.1
xs <- seq(-20, 20, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
N <- 1000
simu <- stan(file="stan_programs/simu_selection.stan",
iter=1, warmup=0, chains=1, data=list("N" = N),
seed=4838282, algorithm="Fixed_param")
N <- 1000
simu <- stan(file="stan_programs/simu_selection.stan",
iter=1, warmup=0, chains=1, data=list("N" = N),
seed=4838282, algorithm="Fixed_param")
N <- 1000
simu <- stan(file="stan_programs/simu_selection.stan",
iter=1, warmup=0, chains=1, data=list("N" = N),
seed=4838282, algorithm="Fixed_param")
y <- extract(simu)$y[1,]
N_reject <- extract(simu)$N_reject[1]
data <- list("N" = N, "x" = y)
fit <- stan(file="stan_programs/unknown_latent_no_filtering.stan",
data=data, seed=8438338, refresh=0)
# Try to infer latent density function assuming no filtering
data <- list("N" = N, "x" = y)
fit <- stan(file="stan_programs/fit_unknown_latent_no_filtering.stan",
data=data, seed=8438338, refresh=0)
fit <- stan(file="stan_programs/fit_unknown_latent_no_filtering.stan",
data=data, seed=8438338, refresh=0)
# Try to infer latent density function assuming no filtering
data <- list("N" = N, "y" = y)
fit <- stan(file="stan_programs/fit_unknown_latent_no_filtering.stan",
data=data, seed=8438338, refresh=0)
samples <- rstan:::extract(fit, permute=FALSE)
par(mfrow=c(1, 2))
util$plot_pushforward_hist(samples[,,1], 25, flim=c(0, 4), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(samples[,,2], 25, flim=c(0, 4), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
samples <- rstan:::extract(fit, permute=FALSE)
par(mfrow=c(1, 2))
util$plot_pushforward_hist(samples[,,1], 25, flim=c(1.75, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(samples[,,2], 25, flim=c(1.75, 2.5), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
mu <- -1
tau <- 3
par(mfrow=c(1, 2))
util$plot_pushforward_hist(samples[,,1], 25, flim=c(1.75, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(samples[,,2], 25, flim=c(1.75, 2.5), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
par(mfrow=c(1, 2))
util$plot_pushforward_hist(samples[,,1], 25, flim=c(-1.25, 2.75), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(samples[,,2], 25, flim=c(1.75, 3.25), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
fit <- stan(file="stan_programs/quad_unknown_both.stan",
data=data, seed=8438338, refresh=0)
fit <- stan(file="stan_programs/fit_quad_unknown_both.stan",
data=data, seed=8438338, refresh=0)
# Diagnostics look less than ideal
util$check_all_hmc_diagnostics(fit)
delta <- 0.1
ys <- seq(-20, 20, delta)
data$y_grid <- ys
data$N_grid <- length(ys)
fit <- stan(file="stan_programs/fit_quad_unknown_both.stan",
data=data, seed=8438338, refresh=0)
util$check_all_hmc_diagnostics(fit)
util$check_all_expectand_diagnostics(fit, expectand_idxs=1:4)
N_calib <- 100
simu <- stan(file="stan_programs/simu_calibration.stan",
iter=1, warmup=0, chains=1, data=list("N_calib" = N_calib),
seed=4838282, algorithm="Fixed_param")
data$N_calib <- N_calib
data$y_calib <- extract(simu)$y_calib[1,]
data$N_reject <- N_reject
# Now fit filtered data along with calibration data
fit <- stan(file="stan_programs/quad_unknown_both_calib_rejects.stan",
data=data, seed=8438338, refresh=0)
data$N_reject <- N_reject
# Now fit filtered data along with calibration data
fit <- stan(file="stan_programs/fit_quad_unknown_both_calib_rejects.stan",
data=data, seed=8438338, refresh=0)
# Diagnostics look good
util$check_all_hmc_diagnostics(fit)
util$check_all_expectand_diagnostics(fit, expectand_idxs=1:4)
r_unpermuted_samples <- rstan:::extract(fit, permute=FALSE)
util$plot_chain_sep_pairs(r_unpermuted_samples[,,1], "chi",
r_unpermuted_samples[,,3], "mu")
abline(v=chi, col="white", pch=16, cex=1.0)
abline(v=chi, col="black", pch=16, cex=1.0)
points(chi, mu, col="white", pch=16, cex=1.0)
abline(chi, mu, col="black", pch=16, cex=1.0)
points(chi, mu, col="white", pch=16, cex=1.0)
points(chi, mu, col="black", pch=16, cex=1.0)
points(chi, mu, col="white", pch=16, cex=1.2)
points(chi, mu, col="black", pch=16, cex=1.0)
util$plot_chain_sep_pairs(r_unpermuted_samples[,,2], "gamma",
r_unpermuted_samples[,,4], "tau")
samples <- rstan:::extract(fit)
par(mfrow=c(1, 1))
plot_realizations(data$y_grid, samples$select_prob_grid,
"x", c(-20, 20), "Selection Probability", c(0, 1))
lines(ys, selection_probs, type="l", col="white", lwd=4)
lines(ys, selection_probs, type="l", col="black", lwd=2)
fit <- stan(file="stan_programs/quad_unknown_both_calib.stan",
data=data, seed=8438338, refresh=0)
r_unpermuted_samples <- rstan:::extract(fit, permute=FALSE)
fit <- stan(file="stan_programs/fit_quad_unknown_both_calib.stan",
data=data, seed=8438338, refresh=0)
unpermuted_samples <- rstan:::extract(fit, permute=FALSE)
par(mfrow=c(2, 2))
util$plot_pushforward_hist(unpermuted_samples[,,1], 25, name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,2], 25, name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,3], 25, name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,4], 25, name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
samples <- rstan:::extract(fit, permute=FALSE)
par(mfrow=c(2, 4))
util$plot_pushforward_hist(unpermuted_samples[,,1], 25,
flim=c(0, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
flim=c(0, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,2], 25,
flim=c(0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,2], 25,
flim=c(0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,3], 25,
flim=c(-2.5, 0), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,3], 25,
flim=c(-2.5, 0), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,4], 25,
flim=c(2.75, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,4], 25,
flim=c(2.75, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
par(mfrow=c(4, 2))
util$plot_pushforward_hist(unpermuted_samples[,,1], 25,
flim=c(0, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
flim=c(0, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,2], 25,
flim=c(0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,2], 25,
flim=c(0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,3], 25,
flim=c(-2.5, 0), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,3], 25,
flim=c(-2.5, 0), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,4], 25,
flim=c(2.75, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,4], 25,
flim=c(2.75, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
name="chi")
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
name="gamma")
util$plot_pushforward_hist(r_unpermuted_samples[,,2], 25,name="gamma")
util$plot_pushforward_hist(r_unpermuted_samples[,,3], 25,name="gamma")
util$plot_pushforward_hist(r_unpermuted_samples[,,4], 25,name="gamma")
par(mfrow=c(2, 4))
util$plot_pushforward_hist(unpermuted_samples[,,1], 25,
flim=c(-10, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
flim=c(-10, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,2], 25,
flim=c(-0.25, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,2], 25,
flim=c(-0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,3], 25,
flim=c(-2.5, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,3], 25,
flim=c(-2.5, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(unpermuted_samples[,,4], 25,
flim=c(2.25, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
util$plot_pushforward_hist(r_unpermuted_samples[,,4], 25,
flim=c(2.25, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
par(mfrow=c(2, 4))
util$plot_pushforward_hist(unpermuted_samples[,,1], 25,
flim=c(-10, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
title("Without Rejections")
util$plot_pushforward_hist(unpermuted_samples[,,2], 25,
flim=c(-0.25, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
title("Without Rejections")
util$plot_pushforward_hist(unpermuted_samples[,,3], 25,
flim=c(-2.5, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
title("Without Rejections")
util$plot_pushforward_hist(unpermuted_samples[,,4], 25,
flim=c(2.25, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
title("Without Rejections")
util$plot_pushforward_hist(r_unpermuted_samples[,,1], 25,
flim=c(-10, 3.25), name="chi")
abline(v=chi, col="white", lty=1, lwd=3)
abline(v=chi, col="black", lty=1, lwd=2)
title("With Rejections")
util$plot_pushforward_hist(r_unpermuted_samples[,,2], 25,
flim=c(-0.5, 1.25), name="gamma")
abline(v=gamma, col="white", lty=1, lwd=3)
abline(v=gamma, col="black", lty=1, lwd=2)
title("With Rejections")
util$plot_pushforward_hist(r_unpermuted_samples[,,3], 25,
flim=c(-2.5, 3.25), name="mu")
abline(v=mu, col="white", lty=1, lwd=3)
abline(v=mu, col="black", lty=1, lwd=2)
title("With Rejections")
util$plot_pushforward_hist(r_unpermuted_samples[,,4], 25,
flim=c(2.25, 3.75), name="tau")
abline(v=tau, col="white", lty=1, lwd=3)
abline(v=tau, col="black", lty=1, lwd=2)
title("With Rejections")
chi <- 2
gamma <- 0.75
delta <- 0.1
xs <- seq(-20, 20, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
mu <- -1
tau <- 3
latent_pds <- dnorm(xs, mu, tau)
plot(xs, 0.14 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Latent Probability Density", yaxt='n', ylim=c(0, 0.2))
lines(xs, latent_pds, col=c_dark, lwd=4)
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 0.2))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
chi <- 2
gamma <- 0.75
delta <- 0.1
xs <- seq(-20, 20, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 2
gamma <- 0.5
delta <- 0.1
xs <- seq(-20, 20, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 2
gamma <- 0.5
delta <- 0.1
xs <- seq(-4, 4, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-20, 20),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 2
gamma <- 0.5
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 2
gamma <- 2
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 2
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 1
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 0.5 / (1 + exp(-gamma * (xs - chi))) + 0.5 / (1 + exp(+gamma * (xs + chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
chi <- 1
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
max(selection_probs)
chi <- 1
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
range(selection_probs)
mu <- 0
tau <- 0.5
latent_pds <- dnorm(xs, mu, tau)
plot(xs, 0.14 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Latent Probability Density", yaxt='n', ylim=c(0, 0.2))
lines(xs, latent_pds, col=c_dark, lwd=4)
latent_pds <- dnorm(xs, mu, tau)
plot(xs, 0.14 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Latent Probability Density", yaxt='n', ylim=c(0, 0.5))
lines(xs, latent_pds, col=c_dark, lwd=4)
plot(xs, 0.14 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Latent Probability Density", yaxt='n', ylim=c(0, 1))
lines(xs, latent_pds, col=c_dark, lwd=4)
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 1.0))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
norm
chi <- 2
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 1.0))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
norm
1 / norm
chi <- 1.5
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 1.0))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
1 / norm
rnorm(10, 0, 1)
ms <- rnorm(10, 0, 1 / 2.23)
ss <- abs(rnorm(10, 0, 1 / 2.52))
cat(sprintf("%.3f/%.3f,", ms, ss), "\n")
ms <- rnorm(10, 0, 1 / 2.23)
ss <- abs(rnorm(10, 0, 1 / 2.52))
cat(sprintf("%.3f/%.3f,", ms, ss), "\n")
ms <- rnorm(20, 0, 1 / 2.23)
ss <- abs(rnorm(20, 0, 1 / 2.52))
cat(sprintf("%.3f/%.3f,", ms, ss), "\n")
#selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi)))
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 1.0))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
1 / norm
chi <- -2
gamma <- 3
delta <- 0.1
xs <- seq(-3, 3, delta)
#selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi))) + 1.0 / (1 + exp(+gamma * (xs + chi)))
selection_probs <- 1.0 / (1 + exp(-gamma * (xs - chi)))
plot(xs, selection_probs, type="l", main ="", col=c_dark, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Selection Probability", yaxt='n', ylim=c(0, 1.05))
filtered_pds <- selection_probs * latent_pds
norm <- sum(filtered_pds) * delta
filtered_pds <- filtered_pds / norm
plot(xs, 0.19 * selection_probs, type="l", main ="", col=c_light, lwd=4,
xlab="x", xlim=c(-3, 3),
ylab="Filtered Probability Density", yaxt='n', ylim=c(0, 1.0))
lines(xs, latent_pds, col=c_light_highlight, lwd=4)
lines(xs, filtered_pds, col=c_dark, lwd=4)
1 / norm
